{"ast":null,"code":"import _slicedToArray from \"/Users/Justin/Desktop/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Justin/Desktop/portfolio/src/components/Icon/Icon.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Icon.scss\";\nimport { selectWindow } from \"../../utils\";\nimport Window from \"../Window/Window\";\n\nvar icon = function icon(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      windowDOM = _useState2[0],\n      setWindowDOM = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      windowOpen = _useState4[0],\n      setWindowOpen = _useState4[1];\n\n  useEffect(function () {\n    setWindowDOM(document.getElementById(\"windowWrapper\"));\n\n    switch (props.id) {\n      case \"desktop_readme\":\n        setTimeout(openWindow, 300);\n        break;\n    }\n  }, []);\n  var id = props.id,\n      title = props.title,\n      type = props.type,\n      source = props.source;\n  var lastClick = 0;\n  var titleClasses = [\"icon__title\"];\n\n  var handleClick = function handleClick(e) {\n    e.stopPropagation();\n    var currClick = Date.now();\n    if (currClick - lastClick < 500) openWindow();\n    lastClick = currClick;\n  };\n\n  var openWindow = function openWindow() {\n    if (!windowOpen) setWindowOpen(true);\n    var window = document.getElementById(id).style;\n    var zIndex = window.zIndex;\n    window.zIndex = selectWindow(zIndex);\n    setTimeout(function () {\n      return window.zIndex = selectWindow(zIndex);\n    }, 200);\n  };\n\n  var closeWindow = function closeWindow() {\n    setWindowOpen(false);\n  };\n\n  if (id.includes(\"desktop\")) {\n    titleClasses.push(\"-desktop\");\n  }\n\n  return React.createElement(\"div\", {\n    className: \"icon\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"icon__thumbnail -\" + type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, source ? React.createElement(\"img\", {\n    className: \"custom\",\n    alt: \"thumbnail\",\n    src: source,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }) : null), React.createElement(\"div\", {\n    className: titleClasses.join(\" \"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, title), windowDOM ? ReactDOM.createPortal(React.createElement(Window, Object.assign({}, props, {\n    close: closeWindow,\n    open: windowOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), windowDOM) : null);\n};\n\nexport default icon;","map":{"version":3,"sources":["/Users/Justin/Desktop/portfolio/src/components/Icon/Icon.jsx"],"names":["React","useState","useEffect","ReactDOM","selectWindow","Window","icon","props","windowDOM","setWindowDOM","windowOpen","setWindowOpen","document","getElementById","id","setTimeout","openWindow","title","type","source","lastClick","titleClasses","handleClick","e","stopPropagation","currClick","Date","now","window","style","zIndex","closeWindow","includes","push","join","createPortal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Icon.scss\";\nimport { selectWindow } from \"../../utils\";\nimport Window from \"../Window/Window\";\n\nconst icon = props => {\n  const [windowDOM, setWindowDOM] = useState(null);\n  const [windowOpen, setWindowOpen] = useState(false);\n\n  useEffect(() => {\n    setWindowDOM(document.getElementById(\"windowWrapper\"));\n    switch (props.id) {\n      case \"desktop_readme\":\n        setTimeout(openWindow, 300);\n        break;\n    }\n  }, []);\n\n  let { id, title, type, source } = props;\n  let lastClick = 0;\n  let titleClasses = [\"icon__title\"];\n\n  const handleClick = e => {\n    e.stopPropagation();\n    let currClick = Date.now();\n    if (currClick - lastClick < 500) openWindow();\n    lastClick = currClick;\n  };\n\n  const openWindow = () => {\n    if (!windowOpen) setWindowOpen(true);\n    let window = document.getElementById(id).style;\n    let zIndex = window.zIndex;\n    window.zIndex = selectWindow(zIndex);\n    setTimeout(() => (window.zIndex = selectWindow(zIndex)), 200);\n  };\n\n  const closeWindow = () => {\n    setWindowOpen(false);\n  };\n\n  if (id.includes(\"desktop\")) {\n    titleClasses.push(\"-desktop\");\n  }\n\n  return (\n    <div className=\"icon\" onClick={handleClick}>\n      <div className={\"icon__thumbnail -\" + type}>\n        {source ? (\n          <img className=\"custom\" alt=\"thumbnail\" src={source} />\n        ) : null}\n      </div>\n      <div className={titleClasses.join(\" \")}>{title}</div>\n      {windowDOM\n        ? ReactDOM.createPortal(\n            <Window {...props} close={closeWindow} open={windowOpen} />,\n            windowDOM\n          )\n        : null}\n    </div>\n  );\n};\n\nexport default icon;\n"]},"metadata":{},"sourceType":"module"}